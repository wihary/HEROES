@inject HttpClient Http
@inject HtmlHelper Html
@using AlmaIt.dotnet.Heroes.Client.Helpers
@using AlmaIt.dotnet.Heroes.Shared.Models
@inherits SeriesBrowserBase

@if (this.FullComicSerieList == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="float-left">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="Filter">
                    <button class="btn btn-sm" onclick="@ApplySearchFilter">
                        <i class="oi oi-magnifying-glass"></i>
                    </button>
                </span>
            </div>
            <input type="text" class="form-control" aria-describedby="Filter" placeholder="search" bind="@(this.Filter)"/>
        </div>
    </div>
    <table class="table table-striped table-sm table-hover">
        <thead>
        <tr>
            <th>
                <button class="btn btn-link" onclick="@(async () => await this.SortSeriesByName())">@(this.Html.DisplayName<ComicSeries>(cs => cs.Name))</button>
            </th>
            <th>
                <button class="btn btn-link" onclick="@(async () => await this.SortSeriesByIssueCount())">@(this.Html.DisplayName<ComicSeries>(cs => cs.IssuesCount))</button>
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var serie in this.ViewableComicSerie)
        {
            <tr>
                <td>@serie.Name</td>
                <td>@serie.IssuesCount</td>
                <td>
                    <button class="btn btn-default" onclick="@(() => this.EditComicSerie(serie.Id))">Edit</button> |
                    <button class="btn btn-default" onclick="@(async () => await this.DeleteComicSerie(serie.Id))">Delete</button>
                </td>
            </tr>
            if (this.IsSerieEditionEnabled.Key == serie.Id && this.IsSerieEditionEnabled.Value)
            {
                <tr>
                    <td colspan="2" class="px-5 py-3">
                        <EditSerieComponent SelectedSerie="@serie" EditCompleted="@OnEditionCompleted"/>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>

    <ul class="pagination float-left">
        <li class="page-item @(this.CurrentPage > 1 ? "enabled" : "disabled")">
            <a class="page-link" onclick=
@(() => this.ShowPage(1)) aria-label="Previous" aria-disabled=@(this.CurrentPage > 1 ? "false" : "true")>
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item @(this.CurrentPage > 1 ? "enabled" : "disabled")">
            <a class="page-link" onclick=@(() => this.ShowPage(this.CurrentPage - 1)) tabindex="-1" aria-disabled=@(this.CurrentPage > 1 ? " false" : "true")>
                Previous
            </a>
        </li>
        @{
            var i = this.PagerMin;
            while (i <= this.PagerMax)
            {
                var pageButtonNumber = i;
                <li class="page-item @(pageButtonNumber == this.CurrentPage ? "active" : "")">
                    <a class="page-link" name="page-@pageButtonNumber" onclick=@(() => this.ShowPage(pageButtonNumber))>
                        @pageButtonNumber
                    </a>
                </li>
                i++;
            }
        }
        <li class="page-item @(this.CurrentPage < this.TotalPages ? "enabled" : "disabled")">
            <a class="page-link" onclick=
@(() => this.ShowPage(this.CurrentPage + 1)) tabindex="-1" aria-disabled=@(this.CurrentPage < this.TotalPages ? "false" : "true")>
                Next
            </a>
        </li>
        <li class="page-item @(this.CurrentPage < this.TotalPages ? "enabled" : "disabled")">
            <a class="page-link" onclick=@(() => this.ShowPage(this.TotalPages)) aria-label="Next" aria-disabled=@(this.CurrentPage < this.TotalPages ? "false" : "true")>
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
    <span class="float-right btn btn-link disabled">Nb Series : @(this.FullComicSerieList.Count)</span>
}