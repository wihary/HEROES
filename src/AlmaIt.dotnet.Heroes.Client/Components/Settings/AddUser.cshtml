@using AlmaIt.Dotnet.Heroes.Client.Components
@inherits AlmaIt.Dotnet.Heroes.Client.Components.Settings.AddUserBase

<TopAlertMessage Message="@this.Message" AlertType="@this.MessageType"/>

<div class="row">
    <div class="col-md-3 px-3 py-3">
        <button class="btn btn-primary btn-sm" type="button" onclick="@(() => ToggleShowAddUser())">Add User</button>
    </div>
</div>
@if(this.ShowAddUserPanel)
{
    <div class="alert alert-primary" role="alert">
        <h3>Add new User</h3>
        <div class="form-row">
            <div class="col-4">
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="username">Username</span>
                    </div>
                    <input type="text" class="form-control" aria-describedby="username" bind="@this.user.Name" />
                </div>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="password">Password</span>
                    </div>
                    <input type="password" class="form-control" aria-describedby="password" bind="@this.user.Password" />
                </div>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="claims">Claims</span>
                    </div>
                    <select class="form-control" aria-describedby="Serie" bind="@this.inputClaim">
                    <option value="">-- Select related Serie --</option>
                        <option value="SuperUser">SuperUser</option>
                        <option value="Admin">Admin</option>
                        <option value="Write">Write</option>
                        <option value="Read">Read</option>
                    </select>
                    <div class="input-group-apend">
                        <button class="btn btn-default" onclick="@(() => this.AddClaim())">Add</button>
                     </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-auto">
                <div class="form-group">
                    @foreach (var claim in this.user.Claims)
                    {
                        <span class="badge badge-primary"data-toggle="tooltip" data-placement="bottom" title="Click to remove"
                            onclick="@(() => this.RemoveClaim(claim))" style="cursor: pointer;">
                            @claim
                        </span>
                    }
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-auto">
                <button class="btn btn-default" onclick="@(async () => await CreateUser())">Save</button>
            </div>
        </div>
    </div>
}